#!/bin/bash
# written by Liebrom Liu

cd .
echo "输入加密密码"
read pwd
echo "当前密码为：$pwd"

#echo "测试写文件"
#echo "$pwd" > filename.txt

cat>./src/ios/NSString+ZCUtility.m<<EOF

//  NSString+Utility.m
//
//  Created by Liebrom Liu on 16-10-10.
//  Copyright (c) 2013年 . All rights reserved.
//

#import "NSString+ZCUtility.h"

@implementation NSString (ZCUtility)
+ (NSString *)generalKey
{
	
//    char key[17];
//    key[0] = 104/*'h'*/;
//    key[1] = 97/*'a'*/;
//    key[2] = 110/*'n'*/;
//    key[3] = 100/*'d'*/;
//    key[4] = 104/*'h'*/;
//    key[5] = 97/*'a'*/;
//    key[6] = 110/*'n'*/;
//    key[7] = 100/*'d'*/;
//    key[8] = 49/*'1'*/;
//    key[9] = 50/*'2'*/;
//    key[10] = 51/*'3'*/;
//    key[11] = 52/*'4'*/;
//    key[12] = 53/*'5'*/;
//    key[13] = 54/*'6'*/;
//    key[14] = 55/*'7'*/;
//    key[15] = 56/*'8'*/;
//    key[16] = 0;
//    
//    return [NSString stringWithCString:key encoding:NSASCIIStringEncoding];

	return [NSString stringWithFormat:@"$pwd"];
}
@end
EOF

echo "iOS 密码修改结束"

cat>./src/android/DataEncryption.java<<EOF
package org.apache.cordova.entryption;

import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

/**
 * Created by huangjie on 2016/10/8.
 */

public class DataEncryption {


	/**
	 * 密钥算法
	 */
	private static final String ALGORITHM = "AES";
	private static final String PASSWORD = "$pwd";//加密密码
	/**
	 * 加解密算法/工作模式/填充方式
	 */
	private static final String ALGORITHM_STR = "AES/ECB/PKCS5Padding";

	/**
	 * SecretKeySpec类是KeySpec接口的实现类,用于构建秘密密钥规范
	 */
	private SecretKeySpec key;

	public DataEncryption() {
		key = new SecretKeySpec(PASSWORD.getBytes(), ALGORITHM);
	}

	/**
	 * AES加密
	 *
	 * @param data
	 * @return
	 * @throws Exception
	 */
	public String encryptData(String data) throws Exception {
		Cipher cipher = Cipher.getInstance(ALGORITHM_STR); // 创建密码器
		cipher.init(Cipher.ENCRYPT_MODE, key);// 初始化
		return Base64Encoder.encode(cipher.doFinal(data.getBytes()));
	}

	/**
	 * AES解密
	 *
	 * @param base64Data
	 * @return
	 * @throws Exception
	 */
	public String decryptData(String base64Data) throws Exception {
		Cipher cipher = Cipher.getInstance(ALGORITHM_STR);
		cipher.init(Cipher.DECRYPT_MODE, key);
		return new String(cipher.doFinal(Base64Decoder.decodeToBytes(base64Data)));
	}

	/**
	 * hex字符串 转 byte数组
	 *
	 * @param s
	 * @return
	 */
	private static byte[] hex2byte(String s) {
		if (s.length() % 2 == 0) {
			return hex2byte(s.getBytes(), 0, s.length() >> 1);
		} else {
			return hex2byte("0" + s);
		}
	}

	private static byte[] hex2byte(byte[] b, int offset, int len) {
		byte[] d = new byte[len];
		for (int i = 0; i < len * 2; i++) {
			int shift = i % 2 == 1 ? 0 : 4;
			d[i >> 1] |= Character.digit((char) b[offset + i], 16) << shift;
		}
		return d;
	}


}
EOF
echo "Android 密码修改结束"